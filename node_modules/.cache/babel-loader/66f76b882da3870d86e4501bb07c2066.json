{"ast":null,"code":"var _jsxFileName = \"/home/aniketbhavsar/React Image-upload/src/components/GetImages.js\";\nimport React, { Component } from 'react';\nimport { storage } from '../firebase';\nimport '../Css/getImage.css';\n\nclass GetImages extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: []\n    };\n  }\n\n  componentDidMount() {\n    storage.ref('images/').listAll().then(image => {\n      const imageRefs = image.items.map(item => {\n        return item.getDownloadURL();\n      });\n      Promise.all(imageRefs).then(images => this.setState({\n        images\n      }));\n    });\n  }\n\n  render() {\n    let imagesLength = this.state.images.length;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }\n    }, imagesLength === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 47\n      }\n    }, \" Images  loading........... \") : this.state.images.map((image, index) => {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-display\",\n        src: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 49\n        }\n      })));\n    }));\n  }\n\n}\n\nexport default GetImages;","map":{"version":3,"sources":["/home/aniketbhavsar/React Image-upload/src/components/GetImages.js"],"names":["React","Component","storage","GetImages","state","images","componentDidMount","ref","listAll","then","image","imageRefs","items","map","item","getDownloadURL","Promise","all","setState","render","imagesLength","length","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,qBAAP;;AACA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC5BG,KAD4B,GACpB;AACFC,MAAAA,MAAM,EAAE;AADN,KADoB;AAAA;;AAI5BC,EAAAA,iBAAiB,GAAG;AACdJ,IAAAA,OAAO,CAACK,GAAR,CAAY,SAAZ,EAAuBC,OAAvB,GAAiCC,IAAjC,CAAuCC,KAAD,IAAW;AAC3C,YAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAI;AACpC,eAAOA,IAAI,CAACC,cAAL,EAAP;AAEL,OAHiB,CAAlB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ,EAAuBF,IAAvB,CAA4BJ,MAAM,IAAI,KAAKa,QAAL,CAAc;AAC9Cb,QAAAA;AAD8C,OAAd,CAAtC;AAGL,KARD;AASL;;AAEDc,EAAAA,MAAM,GAAG;AACH,QAAIC,YAAY,GAAG,KAAKhB,KAAL,CAAWC,MAAX,CAAkBgB,MAArC;AACA,wBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACOD,YAAY,KAAK,CAAjB,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAArB,GAA6D,KAAKhB,KAAL,CAAWC,MAAX,CAAkBQ,GAAlB,CAAsB,CAACH,KAAD,EAAQY,KAAR,KAAkB;AAChG,0BACM;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACM;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,GAAG,EAAEZ,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,CADN,CADN;AASL,KAV6D,CADpE,CADN;AAgBL;;AAlC2B;;AA0ClC,eAAeP,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { storage } from '../firebase';\nimport '../Css/getImage.css';\nclass GetImages extends Component {\n      state = {\n            images: [],\n      }\n      componentDidMount() {\n            storage.ref('images/').listAll().then((image) => {\n                  const imageRefs = image.items.map(item => {\n                        return item.getDownloadURL()\n\n                  })\n                  Promise.all(imageRefs).then(images => this.setState({\n                        images,\n                  }));\n            })\n      }\n\n      render() {\n            let imagesLength = this.state.images.length;\n            return (\n                  <div>\n                        {imagesLength === 0 ? <h4> Images  loading........... </h4> : this.state.images.map((image, index) => {\n                              return (\n                                    <ul key={index}>\n                                          <li>\n                                                <img className=\"img-display\" src={image} />\n                                          </li>\n\n                                    </ul>\n\n                              )\n                        })}\n\n                  </div>\n            )\n      }\n\n\n\n\n}\n\n\nexport default GetImages;"]},"metadata":{},"sourceType":"module"}